{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///var/www/Tinnus/hearing-frontend/src/components/UI/WindowBlock.tsx"],"sourcesContent":["import React, {Children} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {primaryColor, textColor, whiteColor} from \"@/styles/colors\";\r\n\r\nconst Wrapper = styled.div`\r\n    background-color: ${whiteColor};\r\n    z-index: 10;\r\n    position: relative;\r\n    border-radius: 25px;\r\n    padding: 44px 36px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    transition: height .4s ease;\r\n    h2{\r\n        font-family: var(--font-montserrat);\r\n        font-weight: 800;\r\n        font-size: 32px;\r\n        line-height: 1;\r\n        text-align: center;\r\n        text-wrap: nowrap;\r\n    }\r\n    p{\r\n        font-family: var(--font-manrope), serif;\r\n        color: ${textColor};\r\n        text-align: center;\r\n        font-size: 18px;\r\n        &.description-start{\r\n            width: 620px;\r\n            font-weight: 400;\r\n        }\r\n        &.description-mini{\r\n            font-size: 16px;\r\n            margin-top: 16px;\r\n        }\r\n        a{\r\n            color: ${primaryColor};\r\n            position: relative;\r\n            &::before{\r\n                content: '';\r\n                background-color: ${primaryColor};\r\n                position: absolute;\r\n                bottom: 1px;\r\n                left: 0;\r\n                width: 100%;\r\n                height: 1px;\r\n            }\r\n        }\r\n    }\r\n    @media (max-width: 700px) {\r\n        p{\r\n            &.description-start{\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n    @media (max-width: 550px) {\r\n        width: 100vw;\r\n        padding: 32px 16px;\r\n        h2{\r\n            font-size: 30px;\r\n        }\r\n        p{\r\n            &.description-mini{\r\n                font-size: 14px;\r\n                width: 110%;\r\n                margin-top: 14px;\r\n            }\r\n            &.description-start{\r\n                font-size: 16px;\r\n            }\r\n        }\r\n    }\r\n    @media (max-width: 400px) {\r\n        h2{\r\n            font-size: 28px;\r\n        }\r\n        p{\r\n            &.description-mini{\r\n                font-size: 12px;\r\n                margin-top: 12px;\r\n                width: 120%;\r\n            }\r\n            &.description-start{\r\n                font-size: 14px;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst WindowBlock = ({children}: Readonly<{ children: React.ReactNode }>) => {\r\n    const isEmpty = Children.count(children) === 0;\r\n\r\n    if(isEmpty){\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Wrapper className={'content'}>\r\n            {children}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default WindowBlock;"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,UAAU,2KAAA,CAAA,UAAM,CAAC,GAAG;;;EAAA,CAAC;sBACL,EAAE,uHAAA,CAAA,aAAU,CAAC;;;;;;;;;;;;;;;;;;;;;eAqBpB,EAAE,uHAAA,CAAA,YAAS,CAAC;;;;;;;;;;;;mBAYR,EAAE,uHAAA,CAAA,eAAY,CAAC;;;;kCAIA,EAAE,uHAAA,CAAA,eAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDjD,CAAC;AAED,MAAM,cAAc,CAAC,EAAC,QAAQ,EAA0C;IACpE,MAAM,UAAU,qMAAA,CAAA,WAAQ,CAAC,KAAK,CAAC,cAAc;IAE7C,IAAG,SAAQ;QACP,OAAO;IACX;IAEA,qBACI,8OAAC;QAAQ,WAAW;kBACf;;;;;;AAGb;uCAEe","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///var/www/Tinnus/hearing-frontend/src/app/%28auth%29/page.styled.ts"],"sourcesContent":["import styled from \"styled-components\";\r\nimport {primaryColor, redColor, whiteColor} from \"@/styles/colors\";\r\n\r\nexport const BackgroundPage = styled.section`\r\n    min-height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    padding: 24px;\r\n    z-index: 10;\r\n    .content {\r\n        animation: fadeInUp 400ms ease-out both;\r\n    }\r\n\r\n    @keyframes fadeInUp {\r\n        from { opacity: 0; transform: translateY(16px) scale(0.9); }\r\n        to { opacity: 1; transform: translateY(0) scale(1); }\r\n    }\r\n    @media (max-width: 500px) {\r\n        padding: 0;\r\n    }}\r\n`\r\n\r\nexport const AuthForm = styled.form`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    gap: 14px;\r\n    margin: 24px 0;\r\n    z-index: 20;\r\n    width: 100%;\r\n    button{\r\n        margin-top: 28px;\r\n        background-color: ${primaryColor};\r\n        font-size: 24px;\r\n        font-family: var(--font-manrope), serif;\r\n        color: ${whiteColor};\r\n        height: 50px;\r\n        border-radius: 6px;\r\n        width: 100%;\r\n    }\r\n    @media (max-width: 500px) {\r\n        margin: 12px 0;\r\n        button{\r\n            height: 45px;\r\n            font-size: 20px;\r\n            margin-top: 14px;\r\n        }\r\n    }\r\n\r\n`\r\nexport const ContentBlock = styled.div`\r\n    position: relative;\r\n`\r\nexport const OtherErrors = styled.div<{$message: string | undefined}>`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    width: 100%;\r\n    height: ${({$message})=> $message ? \"114%\" : \"100%\"};\r\n    opacity: ${({$message})=> $message ? 1 : 0};\r\n    background-color: ${redColor};\r\n    border-radius: 25px;\r\n    z-index: 1;\r\n    transition: .4s;\r\n    \r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: end;\r\n    padding: 4.5%;\r\n\r\n    font-family: var(--font-manrope), serif;\r\n    font-weight: 500;\r\n    font-size: 24px;\r\n    color: ${whiteColor};\r\n    @media (max-width: 500px) {\r\n        font-size: 20px;\r\n        height: ${({$message})=> $message ? \"112%\" : \"100%\"};\r\n        padding: 3.2%;\r\n    }\r\n    @media (max-width: 400px) {\r\n        padding: 3.2%;\r\n    }\r\n    @media (max-width: 320px) {\r\n        padding: 4%;\r\n    }\r\n`\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEO,MAAM,iBAAiB,2KAAA,CAAA,UAAM,CAAC,OAAO;;;EAAA,CAAC;;;;;;;;;;;;;;;;;;;AAmB7C,CAAC;AAEM,MAAM,WAAW,2KAAA,CAAA,UAAM,CAAC,IAAI;;;EAAA,CAAC;;;;;;;;;;;0BAWV,EAAE,uHAAA,CAAA,eAAY,CAAC;;;eAG1B,EAAE,uHAAA,CAAA,aAAU,CAAC;;;;;;;;;;;;;;AAc5B,CAAC;AACM,MAAM,eAAe,2KAAA,CAAA,UAAM,CAAC,GAAG;;;EAAA,CAAC;;AAEvC,CAAC;AACM,MAAM,cAAc,2KAAA,CAAA,UAAM,CAAC,GAAG;;;EAAgC,CAAC;;;;;YAK1D,EAAE,CAAC,EAAC,QAAQ,EAAC,GAAI,WAAW,SAAS,OAAO;aAC3C,EAAE,CAAC,EAAC,QAAQ,EAAC,GAAI,WAAW,IAAI,EAAE;sBACzB,EAAE,uHAAA,CAAA,WAAQ,CAAC;;;;;;;;;;;;;WAatB,EAAE,uHAAA,CAAA,aAAU,CAAC;;;gBAGR,EAAE,CAAC,EAAC,QAAQ,EAAC,GAAI,WAAW,SAAS,OAAO;;;;;;;;;AAS5D,CAAC","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///var/www/Tinnus/hearing-frontend/src/app/tests/page.styled.ts"],"sourcesContent":["import styled from \"styled-components\";\r\nimport {blackColor, lightGrayColor, primaryColor, textColor, whiteColor} from \"@/styles/colors\";\r\n\r\nexport const TestSection = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    gap: 32px;\r\n    width: 600px;\r\n    @media (max-width: 700px) {\r\n        max-width: 500px;\r\n        h2{\r\n            font-size: 30px;\r\n        }\r\n    }\r\n    @media (max-width: 550px) {\r\n        max-width: 470px;\r\n        h2{\r\n            font-size: 26px;\r\n        }\r\n    }\r\n    @media (max-width: 500px) {\r\n        max-width: 100%;\r\n        h2{\r\n            font-size: 24px;\r\n        }\r\n    }\r\n`\r\nexport const TitleTest = styled.div`\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: start;\r\n    flex-direction: column;\r\n    gap: 16px;\r\n    width: 100%;\r\n    h2{\r\n        text-align: start;\r\n        text-wrap: wrap;\r\n    }\r\n`\r\nexport const FormTest = styled.form`\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: start;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    gap: 16px;\r\n    @media (max-width: 700px) {\r\n        gap: 14px;\r\n    }\r\n`\r\nexport const QuestionBlock = styled.label`\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: center;\r\n    gap: 12px;\r\n    p{\r\n        text-align: start;\r\n        font-size: 20px;\r\n        font-weight: 400;\r\n        color: ${blackColor};\r\n    }\r\n    @media (max-width: 700px) {\r\n        p{\r\n            font-size: 18px;\r\n        }\r\n    }\r\n    @media (max-width: 500px) {\r\n        p{\r\n            font-size: 16px;\r\n        }\r\n    }\r\n`\r\nexport const ButtonsWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n    @media (max-width: 700px) {\r\n        button{\r\n            font-size: 22px;\r\n            height: 47px;\r\n        }\r\n        button:nth-last-child(1){\r\n            width: 170px;\r\n        }\r\n        button:nth-last-child(2){\r\n            width: 150px;\r\n        }\r\n    }\r\n`\r\nexport const ButtonTest = styled.button<{$primary?: boolean}>`\r\n    border-radius: 6px;\r\n    background: ${({$primary}) => $primary ? primaryColor : lightGrayColor};\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    font-family: var(--font-manrope), serif;\r\n    color: ${({$primary})=> $primary ? whiteColor : blackColor};\r\n    width:  ${({$primary}) => $primary ? '200px' : '150px'};\r\n    height: 56px;\r\n    transition: background .4s ease, color .4s ease;\r\n    \r\n    &:disabled{\r\n        background: ${lightGrayColor};\r\n        color: ${blackColor};\r\n        cursor: auto;\r\n    }\r\n`\r\n\r\nexport const TextAreaStyled = styled.textarea`\r\n    background: ${lightGrayColor};\r\n    padding: 12px 10px;\r\n    border-radius: 10px;\r\n    \r\n    resize: none;\r\n    height: 110px;\r\n    width: 100%;\r\n    margin-top: 8px;\r\n\r\n    font-size: 18px;\r\n    font-family: var(--font-manrope), serif;\r\n    color: ${blackColor};\r\n    @media (max-width: 700px) {\r\n        font-size: 16px;\r\n        padding: 10px 8px;\r\n        height: 90px;\r\n    }\r\n`"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;;AAEO,MAAM,cAAc,2KAAA,CAAA,UAAM,CAAC,GAAG;;;EAAA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;AAyBtC,CAAC;AACM,MAAM,YAAY,2KAAA,CAAA,UAAM,CAAC,GAAG;;;EAAA,CAAC;;;;;;;;;;;AAWpC,CAAC;AACM,MAAM,WAAW,2KAAA,CAAA,UAAM,CAAC,IAAI;;;EAAA,CAAC;;;;;;;;;;AAUpC,CAAC;AACM,MAAM,gBAAgB,2KAAA,CAAA,UAAM,CAAC,KAAK;;;EAAA,CAAC;;;;;;;;;eAS3B,EAAE,uHAAA,CAAA,aAAU,CAAC;;;;;;;;;;;;AAY5B,CAAC;AACM,MAAM,iBAAiB,2KAAA,CAAA,UAAM,CAAC,GAAG;;;EAAA,CAAC;;;;;;;;;;;;;;;;;AAiBzC,CAAC;AACM,MAAM,aAAa,2KAAA,CAAA,UAAM,CAAC,MAAM;;;EAAsB,CAAC;;gBAE9C,EAAE,CAAC,EAAC,QAAQ,EAAC,GAAK,WAAW,uHAAA,CAAA,eAAY,GAAG,uHAAA,CAAA,iBAAc,CAAC;;;;WAIhE,EAAE,CAAC,EAAC,QAAQ,EAAC,GAAI,WAAW,uHAAA,CAAA,aAAU,GAAG,uHAAA,CAAA,aAAU,CAAC;YACnD,EAAE,CAAC,EAAC,QAAQ,EAAC,GAAK,WAAW,UAAU,QAAQ;;;;;oBAKvC,EAAE,uHAAA,CAAA,iBAAc,CAAC;eACtB,EAAE,uHAAA,CAAA,aAAU,CAAC;;;AAG5B,CAAC;AAEM,MAAM,iBAAiB,2KAAA,CAAA,UAAM,CAAC,QAAQ;;;EAAA,CAAC;gBAC9B,EAAE,uHAAA,CAAA,iBAAc,CAAC;;;;;;;;;;;WAWtB,EAAE,uHAAA,CAAA,aAAU,CAAC;;;;;;AAMxB,CAAC","debugId":null}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":["file:///var/www/Tinnus/hearing-frontend/src/components/UI/ProgressBar.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {GrayColor, primaryColor, textColor} from \"@/styles/colors\";\r\n\r\ninterface IProps {\r\n    totalQuestions: number,\r\n    currentQuestion: number\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 14px;\r\n    width: 100%;\r\n`\r\nconst ProgressStyled = styled.progress`\r\n    height: 14px;\r\n    width: 100%;\r\n    border-radius: 12px;\r\n    overflow: hidden;\r\n\r\n    &::-webkit-progress-bar {\r\n        background-color: ${GrayColor};\r\n        border-radius: 12px;\r\n    }\r\n\r\n    &::-webkit-progress-value {\r\n        background-color: ${primaryColor};\r\n        border-radius: 12px;\r\n        transition: width 0.3s;\r\n    }\r\n\r\n    &::-moz-progress-bar {\r\n        background-color: ${primaryColor};\r\n        border-radius: 12px;\r\n    }\r\n    @media (max-width: 430px) {\r\n        height: 12px;\r\n    }\r\n`;\r\nconst Percent = styled.p`\r\n    font-size: 20px !important;\r\n    color:${textColor};\r\n    font-weight: 700;\r\n    font-family: var(--font-manrope), serif;\r\n    @media (max-width: 430px) {\r\n        font-size: 18px !important;\r\n    }\r\n`\r\n\r\nconst ProgressBar = ({totalQuestions, currentQuestion}:IProps) => {\r\n\r\n    const percent = Math.round((currentQuestion/totalQuestions) * 100);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <ProgressStyled max={totalQuestions} value={currentQuestion}></ProgressStyled>\r\n            <Percent>{percent}%</Percent>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;"],"names":[],"mappings":";;;;AACA;AACA;;;;AAOA,MAAM,UAAU,2KAAA,CAAA,UAAM,CAAC,GAAG;;;EAAA,CAAC;;;;;;AAM3B,CAAC;AACD,MAAM,iBAAiB,2KAAA,CAAA,UAAM,CAAC,QAAQ;;;EAAA,CAAC;;;;;;;0BAOb,EAAE,uHAAA,CAAA,YAAS,CAAC;;;;;0BAKZ,EAAE,uHAAA,CAAA,eAAY,CAAC;;;;;;0BAMf,EAAE,uHAAA,CAAA,eAAY,CAAC;;;;;;AAMzC,CAAC;AACD,MAAM,UAAU,2KAAA,CAAA,UAAM,CAAC,CAAC;;;EAAA,CAAC;;UAEf,EAAE,uHAAA,CAAA,YAAS,CAAC;;;;;;AAMtB,CAAC;AAED,MAAM,cAAc,CAAC,EAAC,cAAc,EAAE,eAAe,EAAQ;IAEzD,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,kBAAgB,iBAAkB;IAE9D,qBACI,8OAAC;;0BACG,8OAAC;gBAAe,KAAK;gBAAgB,OAAO;;;;;;0BAC5C,8OAAC;;oBAAS;oBAAQ;;;;;;;;;;;;;AAG9B;uCAEe","debugId":null}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"sources":["file:///var/www/Tinnus/hearing-frontend/src/components/UI/Reception.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {lightGrayColor, primaryColor} from \"@/styles/colors\";\r\n\r\ninterface IProps {\r\n    isReception: boolean;\r\n    setIsReception: (isReception: boolean) => void;\r\n    type?: string\r\n}\r\nconst CheckBoxLabel = styled.label`\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n    font-family: var(--font-manrope);\r\n    color: #333;\r\n`;\r\n\r\nconst StyledCheckbox = styled.input`\r\n    display: none; \r\n\r\n    &:checked + span {\r\n        background-color: ${primaryColor}; \r\n        border-color: ${primaryColor};\r\n    }\r\n\r\n    &:checked + span svg {\r\n        opacity: 1;  \r\n    }\r\n`;\r\n\r\nconst CheckboxWrapper = styled.span`\r\n    width: 28px;\r\n    height: 28px;\r\n    border: 2px solid ${lightGrayColor};\r\n    border-radius: 4px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: all 0.3s ease;  \r\n\r\n    svg {\r\n        opacity: 0;  \r\n        transition: opacity 0.3s ease; \r\n    }\r\n    @media (max-width: 500px) {\r\n        width: 22px;\r\n        height: 22px;\r\n    }\r\n    @media (max-width: 350px) {\r\n        width: 18px;\r\n        height: 18px;\r\n    }\r\n`;\r\n\r\nconst Reception = ({ isReception, setIsReception, type }: IProps) => {\r\n\r\n    const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setIsReception(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <CheckBoxLabel>\r\n            <StyledCheckbox\r\n                type={type ? type : 'checkbox'}\r\n                checked={isReception}\r\n                onChange={handleCheckboxChange}\r\n            />\r\n            <CheckboxWrapper>\r\n                <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M5.83325 13.9032L11.3446 19.25L22.1666 8.75\" stroke=\"white\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                </svg>\r\n            </CheckboxWrapper>\r\n        </CheckBoxLabel>\r\n    );\r\n};\r\n\r\nexport default Reception;\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAOA,MAAM,gBAAgB,2KAAA,CAAA,UAAM,CAAC,KAAK;;;EAAA,CAAC;;;;;;;AAOnC,CAAC;AAED,MAAM,iBAAiB,2KAAA,CAAA,UAAM,CAAC,KAAK;;;EAAA,CAAC;;;;0BAIV,EAAE,uHAAA,CAAA,eAAY,CAAC;sBACnB,EAAE,uHAAA,CAAA,eAAY,CAAC;;;;;;AAMrC,CAAC;AAED,MAAM,kBAAkB,2KAAA,CAAA,UAAM,CAAC,IAAI;;;EAAA,CAAC;;;sBAGd,EAAE,uHAAA,CAAA,iBAAc,CAAC;;;;;;;;;;;;;;;;;;;AAmBvC,CAAC;AAED,MAAM,YAAY,CAAC,EAAE,WAAW,EAAE,cAAc,EAAE,IAAI,EAAU;IAE5D,MAAM,uBAAuB,CAAC;QAC1B,eAAe,MAAM,MAAM,CAAC,OAAO;IACvC;IAEA,qBACI,8OAAC;;0BACG,8OAAC;gBACG,MAAM,OAAO,OAAO;gBACpB,SAAS;gBACT,UAAU;;;;;;0BAEd,8OAAC;0BACG,cAAA,8OAAC;oBAAI,OAAM;oBAAK,QAAO;oBAAK,SAAQ;oBAAY,MAAK;oBAAO,OAAM;8BAC9D,cAAA,8OAAC;wBAAK,GAAE;wBAA8C,QAAO;wBAAQ,gBAAa;wBAAI,kBAAe;wBAAQ,mBAAgB;;;;;;;;;;;;;;;;;;;;;;AAKjJ;uCAEe","debugId":null}},
    {"offset": {"line": 608, "column": 0}, "map": {"version":3,"sources":["file:///var/www/Tinnus/hearing-frontend/src/app/tests/page.tsx"],"sourcesContent":["'use client'\r\nimport React, {useState, useEffect, FormEvent} from 'react';\r\nimport WindowBlock from \"@/components/UI/WindowBlock\";\r\nimport {BackgroundPage} from \"@/app/(auth)/page.styled\";\r\nimport {\r\n    ButtonsWrapper,\r\n    ButtonTest,\r\n    FormTest,\r\n    QuestionBlock,\r\n    TestSection,\r\n    TextAreaStyled,\r\n    TitleTest\r\n} from \"@/app/tests/page.styled\";\r\nimport ProgressBar from \"@/components/UI/ProgressBar\";\r\nimport Reception from \"@/components/UI/Reception\";\r\nimport {NetworkService} from \"@/api/request\";\r\nimport {isTestDay, loadStreak, streak} from \"@/store/streakStore\";\r\nimport {useRouter} from \"next/navigation\";\r\n\r\ntype Option = {\r\n    id: number,\r\n    label: string\r\n}\r\ntype Question = {\r\n    id: number;\r\n    question: string;\r\n    type: 'single' | 'multiple' | 'input';\r\n    options?: Option[],\r\n    input?: string\r\n}\r\ntype AnswerValue = {\r\n    selected?: number[];\r\n    input?: string;\r\n};\r\ntype InterstitialText ={\r\n    title: string;\r\n    text: string;\r\n};\r\n\r\ntype AnswersState = Record<number, AnswerValue>;\r\n\r\ntype OutAnswer = {\r\n    question: number;\r\n    selected?: number | number[];\r\n    input?: string;\r\n};\r\n\r\n\r\nconst QuestionsForm = () => {\r\n    const [questions, setQuestions] = useState<Question[]>([]);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [answers, setAnswers] = useState<AnswersState>({});\r\n    const [interstitialTexts, setInterstitialTexts] = useState<InterstitialText | null>(null);\r\n    const [isStreakLoaded, setIsStreakLoaded] = useState(false);\r\n    const router = useRouter();\r\n    const streakDay = streak();\r\n    const testDay = isTestDay();\r\n\r\n    // Текстовые вставки\r\n    const interstitials: Record<number, InterstitialText> = {\r\n        12: {title: \"Госпитальная шкала тревоги и депрессии (HADS). Ответьте, пожалуйста, на следующие вопросы:\", text: \"Часть 1. Тревога. Каждому утверждению соответствуют 4 варианта ответа. Выберите тот из ответов, который соответствует Вашему состоянию:\"},\r\n        19: {title: \"Госпитальная шкала тревоги и депрессии (HADS). Ответьте, пожалуйста, на следующие вопросы:\", text: \"Часть 2. Депрессия. Каждому утверждению соответствуют 4 варианта ответа. Выберите тот из ответов, который соответствует Вашему состоянию:\"},\r\n        26: {title: \"Ниже вы найдете 13 утверждений, описывающих различные мысли и чувства, которые могут быть связаны с шумом в ушах у вас.\", text: \"Шкала катастрофизации тиннитуса (TCS). Шкала катастрофизации тиннитуса направлена на определение мыслей и чувств, которые вы испытываете при ощущении шума в ушах. С помощью данного опросника мы хотим выяснить, какое влияние оказывает шум в ушах на ваше состояние: на настроение, поведение, отношение.\"},\r\n    }\r\n\r\n    // 1) Загружаем streak в стор и отмечаем готовность\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        (async () => {\r\n            try {\r\n                await loadStreak();\r\n                if (mounted) setIsStreakLoaded(true);\r\n            } catch (err) {\r\n                console.log(err);\r\n                if (mounted) setIsStreakLoaded(true);\r\n            }\r\n        })();\r\n        return () => { mounted = false };\r\n    }, []);\r\n\r\n    // 2) После загрузки streak реагируем на актуальное значение testDay\r\n    useEffect(() => {\r\n        if (!isStreakLoaded) return;\r\n        if (!testDay) {\r\n            router.push(\"/instruction\");\r\n            return;\r\n        }\r\n        (async () => {\r\n            try {\r\n                const res = await NetworkService.questions();\r\n                setQuestions(res.data.questions);\r\n            } catch (err) {\r\n                console.log(err);\r\n                setQuestions([]);\r\n            }\r\n        })();\r\n    }, [isStreakLoaded, testDay, router]);\r\n    const handleSubmit = async () => {\r\n        const outAnswers: OutAnswer[] = Object.entries(answers)\r\n            .map(([key, value]) => {\r\n                const questionId = Number(key);\r\n                const questionMeta = questions.find(q => q.id === questionId);\r\n\r\n                const out: OutAnswer = { question: questionId };\r\n\r\n                if (value.selected && value.selected.length > 0) {\r\n                    if (questionMeta?.type === 'single') {\r\n                        out.selected = value.selected[0];\r\n                    } else if (questionMeta?.type === 'multiple') {\r\n                        out.selected = value.selected;\r\n                    }\r\n                }\r\n\r\n                if (value.input && value.input.trim() !== '') {\r\n                    out.input = value.input.trim();\r\n                }\r\n\r\n                if (out.selected === undefined && !out.input) return null;\r\n                return out;\r\n            })\r\n            .filter((v): v is OutAnswer => v !== null);\r\n\r\n        const payload = { day: streakDay, answers: outAnswers };\r\n        await NetworkService.answers(payload);\r\n        router.push(\"/instruction\");\r\n    };\r\n\r\n    // Изменение состояния ответов\r\n    const handleMultipleChange = (qId: number, optionId: number, checked: boolean) => {\r\n        setAnswers((prev) => {\r\n            const prevAns = prev[qId]?.selected || [];\r\n            const newAns = checked\r\n                ? [...prevAns, optionId]\r\n                : prevAns.filter((id) => id !== optionId);\r\n\r\n            return { ...prev, [qId]: { ...prev[qId], selected: newAns } };\r\n        });\r\n    };\r\n    const handleSingleChange = (questionId: number, optionId: number) => {\r\n        setAnswers((prev) => ({\r\n            ...prev,\r\n            [questionId]: { selected: [optionId] },\r\n        }));\r\n    };\r\n    const handleInputChange = (qId: number, value: string) => {\r\n        setAnswers((prev) => ({\r\n            ...prev,\r\n            [qId]: { ...prev[qId], input: value },\r\n        }));\r\n    };\r\n\r\n    //Переключение вопросов\r\n    const handlePrevQuestion = () => {\r\n        if (interstitialTexts){\r\n            setInterstitialTexts(null);\r\n            return;\r\n        }\r\n        if (currentQuestionIndex > 0) {\r\n            setCurrentQuestionIndex(currentQuestionIndex - 1);\r\n        }\r\n    };\r\n    const handleNextQuestion = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        const currentQ = questions[currentQuestionIndex];\r\n        if(currentQ && interstitials[currentQ.id]) {\r\n            setInterstitialTexts(interstitials[currentQ.id])\r\n            return;\r\n        }\r\n        if (currentQuestionIndex < questions.length - 1) {\r\n            setCurrentQuestionIndex((prev)=> prev + 1);\r\n        } else {\r\n            handleSubmit();\r\n        }\r\n    };\r\n\r\n    const handleNextFromInterstitial = () => {\r\n        setInterstitialTexts(null);\r\n        setCurrentQuestionIndex((prev) => prev + 1);\r\n    };\r\n\r\n    // Проверка ответа на вопрос\r\n    const isAnswered = (question: Question): boolean=>{\r\n        const ans = answers[question.id];\r\n        if(question.type === 'multiple' || question.type === 'single'){\r\n            return !!ans?.selected && ans.selected.length > 0\r\n        }\r\n        if (question.type === 'input') {\r\n            return !!ans?.input && ans.input.trim() !== '';\r\n        }\r\n        return false\r\n    }\r\n\r\n\r\n    const currentQuestion: Question = questions[currentQuestionIndex];\r\n\r\n    return (\r\n        <BackgroundPage>\r\n            <WindowBlock>\r\n                {currentQuestion && (\r\n                    <TestSection>\r\n                        <TitleTest>\r\n                            <ProgressBar\r\n                                totalQuestions={questions.length}\r\n                                currentQuestion={currentQuestionIndex + 1}\r\n                            />\r\n                            {!interstitialTexts && <h2>{currentQuestion.question}</h2>}\r\n                            {interstitialTexts && <h2>{interstitialTexts.title}</h2>}\r\n                        </TitleTest>\r\n                        <FormTest id='questionForm' onSubmit={handleNextQuestion}>\r\n                            {interstitialTexts ? (\r\n                                <QuestionBlock>\r\n                                    <p style={{cursor: \"auto\"}}>{interstitialTexts.text}</p>\r\n                                </QuestionBlock>\r\n                            ) : (\r\n                                <>\r\n                                    {currentQuestion.type === 'multiple' &&\r\n                                        currentQuestion.options?.map((opt) => {\r\n                                            const selected = answers[currentQuestion.id]?.selected || [];\r\n                                            return (\r\n                                                <QuestionBlock key={opt.id}>\r\n                                                    <Reception\r\n                                                        isReception={selected.includes(opt.id)}\r\n                                                        setIsReception={(checked) =>\r\n                                                            handleMultipleChange(currentQuestion.id, opt.id, checked)\r\n                                                        }\r\n                                                    />\r\n                                                    <p>{opt.label}</p>\r\n                                                </QuestionBlock>\r\n                                            );\r\n                                        })}\r\n                                    {currentQuestion.type === 'single' &&\r\n                                        currentQuestion.options?.map((opt) => (\r\n                                            <QuestionBlock key={opt.id}>\r\n                                                <Reception\r\n                                                    type=\"radio\"\r\n                                                    isReception={answers[currentQuestion.id]?.selected?.[0] === opt.id}\r\n                                                    setIsReception={(checked) =>\r\n                                                        checked && handleSingleChange(currentQuestion.id, opt.id)\r\n                                                    }\r\n                                                />\r\n                                                <p>{opt.label}</p>\r\n                                            </QuestionBlock>\r\n                                        ))}\r\n                                    {currentQuestion.input && (\r\n                                        <TextAreaStyled\r\n                                            placeholder={currentQuestion.input}\r\n                                            value={(answers[currentQuestion.id] as { input: string } | undefined)?.input || ''}\r\n                                            onChange={(e) => handleInputChange(currentQuestion.id, e.target.value)}\r\n                                        >\r\n                                        </TextAreaStyled>\r\n                                    )}\r\n                                </>\r\n                            )}\r\n                        </FormTest>\r\n                        <ButtonsWrapper>\r\n                            <ButtonTest onClick={handlePrevQuestion} disabled={currentQuestionIndex===0 && !interstitialTexts}>Назад</ButtonTest>\r\n                            <ButtonTest\r\n                                $primary\r\n                                disabled={!interstitialTexts && !isAnswered(currentQuestion)}\r\n                                type={interstitialTexts ? 'button' : 'submit'}\r\n                                onClick={interstitialTexts ? handleNextFromInterstitial : undefined}\r\n                                form='questionForm'\r\n                            >\r\n                                {currentQuestionIndex === questions.length - 1 && !interstitialTexts ? 'Отправить' : 'Далее'}\r\n                            </ButtonTest>\r\n                        </ButtonsWrapper>\r\n                    </TestSection>\r\n                )}\r\n            </WindowBlock>\r\n        </BackgroundPage>\r\n    );\r\n};\r\n\r\nexport default QuestionsForm;"],"names":[],"mappings":"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","debugId":null}}]
}