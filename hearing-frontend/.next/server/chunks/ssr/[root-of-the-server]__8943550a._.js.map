{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/sbb/Desktop/Tinnus/hearing-frontend/src/components/UI/WaveSvg.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { usePathname } from 'next/navigation';\r\nimport styled from 'styled-components';\r\n\r\nconst TRANSITION_MS = 700;\r\nconst SESSION_STORAGE_KEY = 'prev-path';\r\n\r\ntype WavePoseVars = {\r\n    '--wave1-x': string;\r\n    '--wave1-y': string;\r\n    '--wave1-rot': string;\r\n    '--wave2-x': string;\r\n    '--wave2-y': string;\r\n    '--wave2-rot': string;\r\n    '--wave3-x': string;\r\n    '--wave3-y': string;\r\n    '--wave3-rot': string;\r\n};\r\n\r\nconst WrapperWave = styled.div`\r\n    position: fixed; \r\n    inset: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    z-index: -10;\r\n    pointer-events: none;\r\n\r\n    .wave {\r\n        display: block;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n    \r\n    .wave-layer {\r\n        transition: transform ${TRANSITION_MS}ms ease-in-out, opacity ${TRANSITION_MS}ms ease-in-out;\r\n        will-change: transform;\r\n        transform-origin: 100% 100%;\r\n    }\r\n\r\n    .wave-layer.layer-1 {\r\n        transform: translate(var(--wave1-x, 0px), var(--wave1-y, 0px)) rotate(var(--wave1-rot, 0deg));\r\n    }\r\n\r\n    .wave-layer.layer-2 {\r\n        transform: translate(var(--wave2-x, 0px), var(--wave2-y, 0px)) rotate(var(--wave2-rot, 0deg));\r\n    }\r\n\r\n    .wave-layer.layer-3 {\r\n        transform: translate(var(--wave3-x, 0px), var(--wave3-y, 0px)) rotate(var(--wave3-rot, 0deg));\r\n    }\r\n`;\r\n\r\nfunction hashPath(path: string): number {\r\n    let h = 0;\r\n    for (let i = 0; i < path.length; i++) {\r\n        h = (h * 31 + path.charCodeAt(i)) | 0;\r\n    }\r\n    return Math.abs(h);\r\n}\r\n\r\nfunction poseFromPath(path: string): WavePoseVars {\r\n    const h = hashPath(path);\r\n    const deterministicOffset = (shift: number, amplitudePx: number) => {\r\n        const v = ((h >> shift) % (amplitudePx * 2 + 1)) - amplitudePx;\r\n        return v;\r\n    };\r\n    const px = (v: number) => `${v}px`;\r\n    const deg = (v: number) => `${v}deg`;\r\n\r\n    const w1x = px(deterministicOffset(1, 8));\r\n    const w1y = px(deterministicOffset(2, 6));\r\n    const w1r = deg(deterministicOffset(3, 2));\r\n\r\n    const w2x = px(deterministicOffset(4, 10));\r\n    const w2y = px(deterministicOffset(5, 8));\r\n    const w2r = deg(deterministicOffset(6, 3));\r\n\r\n    const w3x = px(0);\r\n    const w3y = px(deterministicOffset(8, 10));\r\n    const w3r = deg(0);\r\n\r\n    return {\r\n        '--wave1-x': w1x,\r\n        '--wave1-y': w1y,\r\n        '--wave1-rot': w1r,\r\n        '--wave2-x': w2x,\r\n        '--wave2-y': w2y,\r\n        '--wave2-rot': w2r,\r\n        '--wave3-x': w3x,\r\n        '--wave3-y': w3y,\r\n        '--wave3-rot': w3r,\r\n    };\r\n}\r\n\r\nconst WaveSvg: React.FC = () => {\r\n    const pathname = usePathname() || '/';\r\n    const [vars, setVars] = useState<WavePoseVars>(() => {\r\n        if (typeof window !== 'undefined') {\r\n            const prev = window.sessionStorage.getItem(SESSION_STORAGE_KEY);\r\n            return poseFromPath(prev || pathname);\r\n        }\r\n        return poseFromPath(pathname);\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (typeof window !== 'undefined') {\r\n            window.sessionStorage.setItem(SESSION_STORAGE_KEY, pathname);\r\n        }\r\n    }, [pathname]);\r\n\r\n    useEffect(() => {\r\n        const id = requestAnimationFrame(() => setVars(poseFromPath(pathname)));\r\n        return () => cancelAnimationFrame(id);\r\n    }, [pathname]);\r\n\r\n    return (\r\n        <WrapperWave style={vars as React.CSSProperties}>\r\n            <svg\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                viewBox=\"0 0 1920 1080\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"wave\"\r\n                preserveAspectRatio=\"xMaxYMax slice\"\r\n                aria-hidden=\"true\"\r\n                focusable=\"false\"\r\n            >\r\n                <g>\r\n                    <rect width=\"1920\" height=\"1080\" fill=\"#D8F5FF\" />\r\n                    <path\r\n                        className=\"wave-layer layer-1\"\r\n                        d=\"M1789.5 65.5C1889.5 41.5 1820 44 1883.5 -21.5H1950.5V1084H-114.5C-107.167 956.333 -70.3 692.7 18.5 659.5C129.5 618 96.5 618.5 201 599C305.5 579.5 327.5 594.5 492.5 559.5C657.5 524.5 553.5 466 653.5 427C753.5 388 684 335.5 849.5 272.5C940.354 237.915 1087.69 205 1189 205C1280.5 205 1267.5 213.5 1485 194C1702.5 174.5 1565.5 150.5 1641.5 111.5C1717.5 72.5 1689.5 89.5 1789.5 65.5Z\"\r\n                        fill=\"#D4F0FF\"\r\n                    />\r\n                    <path\r\n                        className=\"wave-layer layer-2\"\r\n                        d=\"M1692 268C1791.6 259.2 1913.17 296.333 1961.5 316V1258L-82 1245V955.5C-22.5 951.167 16 834.7 112 831.5C232 827.5 214 764 334 733.5C369.085 724.582 505.5 705.5 645 653C784.5 600.5 743 588 841 453C939 318 943 372.5 1167.5 342C1392 311.5 1308.5 344 1448 342C1587.5 340 1567.5 279 1692 268Z\"\r\n                        fill=\"#D1ECFF\"\r\n                    />\r\n                    <path\r\n                        className=\"wave-layer layer-3\"\r\n                        d=\"M1539.5 422C1643.1 360 1922.5 308.5 1944.5 415.5V1205H-150C-150 1132 -146.6 995.2 -133 1032C-116 1078 -35.3833 1010.16 172.5 951.5C413.5 883.5 369.5 848.5 646 733C922.5 617.5 1041.5 715 1240.5 662C1376.78 625.704 1410 499.5 1539.5 422Z\"\r\n                        fill=\"#CDE4FF\"\r\n                    />\r\n                </g>\r\n            </svg>\r\n        </WrapperWave>\r\n    );\r\n};\r\n\r\nexport default WaveSvg;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,gBAAgB;AACtB,MAAM,sBAAsB;AAc5B,MAAM,cAAc,2KAAA,CAAA,UAAM,CAAC,GAAG;;;EAAA,CAAC;;;;;;;;;;;;;;;8BAeD,EAAE,cAAc,wBAAwB,EAAE,cAAc;;;;;;;;;;;;;;;;AAgBtF,CAAC;AAED,SAAS,SAAS,IAAY;IAC1B,IAAI,IAAI;IACR,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAAK;QAClC,IAAI,AAAC,IAAI,KAAK,KAAK,UAAU,CAAC,KAAM;IACxC;IACA,OAAO,KAAK,GAAG,CAAC;AACpB;AAEA,SAAS,aAAa,IAAY;IAC9B,MAAM,IAAI,SAAS;IACnB,MAAM,sBAAsB,CAAC,OAAe;QACxC,MAAM,IAAI,AAAC,CAAC,KAAK,KAAK,IAAI,CAAC,cAAc,IAAI,CAAC,IAAK;QACnD,OAAO;IACX;IACA,MAAM,KAAK,CAAC,IAAc,GAAG,EAAE,EAAE,CAAC;IAClC,MAAM,MAAM,CAAC,IAAc,GAAG,EAAE,GAAG,CAAC;IAEpC,MAAM,MAAM,GAAG,oBAAoB,GAAG;IACtC,MAAM,MAAM,GAAG,oBAAoB,GAAG;IACtC,MAAM,MAAM,IAAI,oBAAoB,GAAG;IAEvC,MAAM,MAAM,GAAG,oBAAoB,GAAG;IACtC,MAAM,MAAM,GAAG,oBAAoB,GAAG;IACtC,MAAM,MAAM,IAAI,oBAAoB,GAAG;IAEvC,MAAM,MAAM,GAAG;IACf,MAAM,MAAM,GAAG,oBAAoB,GAAG;IACtC,MAAM,MAAM,IAAI;IAEhB,OAAO;QACH,aAAa;QACb,aAAa;QACb,eAAe;QACf,aAAa;QACb,aAAa;QACb,eAAe;QACf,aAAa;QACb,aAAa;QACb,eAAe;IACnB;AACJ;AAEA,MAAM,UAAoB;IACtB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD,OAAO;IAClC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB;QAC3C;;QAIA,OAAO,aAAa;IACxB;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN;;IAGJ,GAAG;QAAC;KAAS;IAEb,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,KAAK,sBAAsB,IAAM,QAAQ,aAAa;QAC5D,OAAO,IAAM,qBAAqB;IACtC,GAAG;QAAC;KAAS;IAEb,qBACI,8OAAC;QAAY,OAAO;kBAChB,cAAA,8OAAC;YACG,OAAM;YACN,QAAO;YACP,SAAQ;YACR,MAAK;YACL,OAAM;YACN,WAAU;YACV,qBAAoB;YACpB,eAAY;YACZ,WAAU;sBAEV,cAAA,8OAAC;;kCACG,8OAAC;wBAAK,OAAM;wBAAO,QAAO;wBAAO,MAAK;;;;;;kCACtC,8OAAC;wBACG,WAAU;wBACV,GAAE;wBACF,MAAK;;;;;;kCAET,8OAAC;wBACG,WAAU;wBACV,GAAE;wBACF,MAAK;;;;;;kCAET,8OAAC;wBACG,WAAU;wBACV,GAAE;wBACF,MAAK;;;;;;;;;;;;;;;;;;;;;;AAM7B;uCAEe","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///Users/sbb/Desktop/Tinnus/hearing-frontend/src/components/UI/WindowBlock.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {primaryColor, textColor, whiteColor} from \"@/styles/colors\";\r\n\r\nconst Wrapper = styled.div`\r\n    background-color: ${whiteColor};\r\n    z-index: 10;\r\n    position: relative;\r\n    border-radius: 25px;\r\n    padding: 44px 36px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    transition: height .4s ease;\r\n    h2{\r\n        font-family: var(--font-montserrat);\r\n        font-weight: 800;\r\n        font-size: 32px;\r\n        line-height: 1;\r\n        text-align: center;\r\n    }\r\n    p{\r\n        font-family: var(--font-manrope), serif;\r\n        color: ${textColor};\r\n        text-align: center;\r\n        font-size: 18px;\r\n        &.description-start{\r\n            width: 620px;\r\n            font-weight: 400;\r\n        }\r\n        &.description-mini{\r\n            font-size: 16px;\r\n            margin-top: 16px;\r\n        }\r\n        a{\r\n            color: ${primaryColor};\r\n            position: relative;\r\n            &::before{\r\n                content: '';\r\n                background-color: ${primaryColor};\r\n                position: absolute;\r\n                bottom: 1px;\r\n                left: 0;\r\n                width: 100%;\r\n                height: 1px;\r\n            }\r\n        }\r\n    }\r\n    \r\n`\r\n\r\nconst WindowBlock = ({children}: Readonly<{ children: React.ReactNode }>) => {\r\n    return (\r\n        <Wrapper className={'content'}>\r\n            {children}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default WindowBlock;"],"names":[],"mappings":";;;;AACA;AACA;;;;AAEA,MAAM,UAAU,2KAAA,CAAA,UAAM,CAAC,GAAG;;;EAAA,CAAC;sBACL,EAAE,uHAAA,CAAA,aAAU,CAAC;;;;;;;;;;;;;;;;;;;;eAoBpB,EAAE,uHAAA,CAAA,YAAS,CAAC;;;;;;;;;;;;mBAYR,EAAE,uHAAA,CAAA,eAAY,CAAC;;;;kCAIA,EAAE,uHAAA,CAAA,eAAY,CAAC;;;;;;;;;;AAUjD,CAAC;AAED,MAAM,cAAc,CAAC,EAAC,QAAQ,EAA0C;IACpE,qBACI,8OAAC;QAAQ,WAAW;kBACf;;;;;;AAGb;uCAEe","debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file:///Users/sbb/Desktop/Tinnus/hearing-frontend/src/app/%28auth%29/page.styled.ts"],"sourcesContent":["import styled from \"styled-components\";\r\nimport {primaryColor, redColor, whiteColor} from \"@/styles/colors\";\r\n\r\nexport const BackgroundPage = styled.section`\r\n    min-height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    padding: 24px;\r\n    z-index: 10;\r\n\r\n    .content {\r\n        animation: fadeInUp 400ms ease-out both;\r\n    }\r\n\r\n    @keyframes fadeInUp {\r\n        from { opacity: 0; transform: translateY(16px); }\r\n        to { opacity: 1; transform: translateY(0); }\r\n    }\r\n`\r\n\r\nexport const AuthForm = styled.form`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    gap: 14px;\r\n    margin: 24px 0;\r\n    z-index: 20;\r\n    button{\r\n        margin-top: 28px;\r\n        background-color: ${primaryColor};\r\n        font-size: 24px;\r\n        font-family: var(--font-manrope), serif;\r\n        color: ${whiteColor};\r\n        height: 50px;\r\n        border-radius: 6px;\r\n        width: 100%;\r\n    }\r\n`\r\nexport const ContentBlock = styled.div`\r\n    position: relative;\r\n`\r\nexport const OtherErrors = styled.div<{$message: string | undefined}>`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    width: 100%;\r\n    height: ${({$message})=> $message ? \"114%\" : \"100%\"};\r\n    opacity: ${({$message})=> $message ? 1 : 0};\r\n    background-color: ${redColor};\r\n    border-radius: 25px;\r\n    z-index: 1;\r\n    transition: .4s;\r\n    \r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: end;\r\n    padding: 4.5%;\r\n\r\n    font-family: var(--font-manrope), serif;\r\n    font-weight: 500;\r\n    font-size: 24px;\r\n    color: ${whiteColor};\r\n`\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEO,MAAM,iBAAiB,2KAAA,CAAA,UAAM,CAAC,OAAO;;;EAAA,CAAC;;;;;;;;;;;;;;;;;AAiB7C,CAAC;AAEM,MAAM,WAAW,2KAAA,CAAA,UAAM,CAAC,IAAI;;;EAAA,CAAC;;;;;;;;;;0BAUV,EAAE,uHAAA,CAAA,eAAY,CAAC;;;eAG1B,EAAE,uHAAA,CAAA,aAAU,CAAC;;;;;AAK5B,CAAC;AACM,MAAM,eAAe,2KAAA,CAAA,UAAM,CAAC,GAAG;;;EAAA,CAAC;;AAEvC,CAAC;AACM,MAAM,cAAc,2KAAA,CAAA,UAAM,CAAC,GAAG;;;EAAgC,CAAC;;;;;YAK1D,EAAE,CAAC,EAAC,QAAQ,EAAC,GAAI,WAAW,SAAS,OAAO;aAC3C,EAAE,CAAC,EAAC,QAAQ,EAAC,GAAI,WAAW,IAAI,EAAE;sBACzB,EAAE,uHAAA,CAAA,WAAQ,CAAC;;;;;;;;;;;;;WAatB,EAAE,uHAAA,CAAA,aAAU,CAAC;AACxB,CAAC","debugId":null}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":["file:///Users/sbb/Desktop/Tinnus/hearing-frontend/src/app/tests/page.styled.ts"],"sourcesContent":["import styled from \"styled-components\";\r\nimport {blackColor, lightGrayColor, primaryColor, textColor, whiteColor} from \"@/styles/colors\";\r\n\r\nexport const TestSection = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    gap: 32px;\r\n    width: 600px;\r\n`\r\nexport const TitleTest = styled.div`\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: start;\r\n    flex-direction: column;\r\n    gap: 16px;\r\n    width: 100%;\r\n    h2{\r\n        text-align: start;\r\n    }\r\n`\r\nexport const FormTest = styled.form`\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: start;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    gap: 16px;\r\n`\r\nexport const QuestionBlock = styled.label`\r\n    display: flex;\r\n    justify-content: start;\r\n    align-items: start;\r\n    gap: 12px;\r\n    p{\r\n        text-align: start;\r\n        font-size: 20px;\r\n        font-weight: 400;\r\n        color: ${blackColor};\r\n    }\r\n`\r\nexport const ButtonsWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n`\r\nexport const ButtonTest = styled.button<{$primary?: boolean}>`\r\n    border-radius: 6px;\r\n    background: ${({$primary}) => $primary ? primaryColor : lightGrayColor};\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    font-family: var(--font-manrope), serif;\r\n    color: ${({$primary})=> $primary ? whiteColor : blackColor};\r\n    width:  ${({$primary}) => $primary ? '200px' : '150px'};\r\n    height: 56px;\r\n    transition: background .4s ease, color .4s ease;\r\n    \r\n    &:disabled{\r\n        background: ${lightGrayColor};\r\n        color: ${blackColor};\r\n        cursor: auto;\r\n    }\r\n`\r\n\r\nexport const TextAreaStyled = styled.textarea`\r\n    background: ${lightGrayColor};\r\n    padding: 12px 10px;\r\n    border-radius: 10px;\r\n    \r\n    resize: none;\r\n    height: 110px;\r\n    width: 100%;\r\n    margin-top: 8px;\r\n\r\n    font-size: 18px;\r\n    font-family: var(--font-manrope), serif;\r\n    color: ${blackColor};\r\n`"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;;AAEO,MAAM,cAAc,2KAAA,CAAA,UAAM,CAAC,GAAG;;;EAAA,CAAC;;;;;;;AAOtC,CAAC;AACM,MAAM,YAAY,2KAAA,CAAA,UAAM,CAAC,GAAG;;;EAAA,CAAC;;;;;;;;;;AAUpC,CAAC;AACM,MAAM,WAAW,2KAAA,CAAA,UAAM,CAAC,IAAI;;;EAAA,CAAC;;;;;;;AAOpC,CAAC;AACM,MAAM,gBAAgB,2KAAA,CAAA,UAAM,CAAC,KAAK;;;EAAA,CAAC;;;;;;;;;eAS3B,EAAE,uHAAA,CAAA,aAAU,CAAC;;AAE5B,CAAC;AACM,MAAM,iBAAiB,2KAAA,CAAA,UAAM,CAAC,GAAG;;;EAAA,CAAC;;;;;AAKzC,CAAC;AACM,MAAM,aAAa,2KAAA,CAAA,UAAM,CAAC,MAAM;;;EAAsB,CAAC;;gBAE9C,EAAE,CAAC,EAAC,QAAQ,EAAC,GAAK,WAAW,uHAAA,CAAA,eAAY,GAAG,uHAAA,CAAA,iBAAc,CAAC;;;;WAIhE,EAAE,CAAC,EAAC,QAAQ,EAAC,GAAI,WAAW,uHAAA,CAAA,aAAU,GAAG,uHAAA,CAAA,aAAU,CAAC;YACnD,EAAE,CAAC,EAAC,QAAQ,EAAC,GAAK,WAAW,UAAU,QAAQ;;;;;oBAKvC,EAAE,uHAAA,CAAA,iBAAc,CAAC;eACtB,EAAE,uHAAA,CAAA,aAAU,CAAC;;;AAG5B,CAAC;AAEM,MAAM,iBAAiB,2KAAA,CAAA,UAAM,CAAC,QAAQ;;;EAAA,CAAC;gBAC9B,EAAE,uHAAA,CAAA,iBAAc,CAAC;;;;;;;;;;;WAWtB,EAAE,uHAAA,CAAA,aAAU,CAAC;AACxB,CAAC","debugId":null}},
    {"offset": {"line": 458, "column": 0}, "map": {"version":3,"sources":["file:///Users/sbb/Desktop/Tinnus/hearing-frontend/src/components/UI/ProgressBar.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {GrayColor, primaryColor, textColor} from \"@/styles/colors\";\r\n\r\ninterface IProps {\r\n    totalQuestions: number,\r\n    currentQuestion: number\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 14px;\r\n    width: 100%;\r\n`\r\nconst ProgressStyled = styled.progress`\r\n    height: 14px;\r\n    width: 100%;\r\n    border-radius: 12px;\r\n    overflow: hidden;\r\n\r\n    &::-webkit-progress-bar {\r\n        background-color: ${GrayColor};\r\n        border-radius: 12px;\r\n    }\r\n\r\n    &::-webkit-progress-value {\r\n        background-color: ${primaryColor};\r\n        border-radius: 12px;\r\n        transition: width 0.3s;\r\n    }\r\n\r\n    &::-moz-progress-bar {\r\n        background-color: ${primaryColor};\r\n        border-radius: 12px;\r\n    }\r\n`;\r\nconst Percent = styled.p`\r\n    font-size: 20px !important;\r\n    color:${textColor};\r\n    font-weight: 700;\r\n    font-family: var(--font-manrope), serif;\r\n`\r\n\r\nconst ProgressBar = ({totalQuestions, currentQuestion}:IProps) => {\r\n\r\n    const percent = Math.round((currentQuestion/totalQuestions) * 100);\r\n\r\n    return (\r\n        <Wrapper>\r\n            <ProgressStyled max={totalQuestions} value={currentQuestion}></ProgressStyled>\r\n            <Percent>{percent}%</Percent>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;"],"names":[],"mappings":";;;;AACA;AACA;;;;AAOA,MAAM,UAAU,2KAAA,CAAA,UAAM,CAAC,GAAG;;;EAAA,CAAC;;;;;;AAM3B,CAAC;AACD,MAAM,iBAAiB,2KAAA,CAAA,UAAM,CAAC,QAAQ;;;EAAA,CAAC;;;;;;;0BAOb,EAAE,uHAAA,CAAA,YAAS,CAAC;;;;;0BAKZ,EAAE,uHAAA,CAAA,eAAY,CAAC;;;;;;0BAMf,EAAE,uHAAA,CAAA,eAAY,CAAC;;;AAGzC,CAAC;AACD,MAAM,UAAU,2KAAA,CAAA,UAAM,CAAC,CAAC;;;EAAA,CAAC;;UAEf,EAAE,uHAAA,CAAA,YAAS,CAAC;;;AAGtB,CAAC;AAED,MAAM,cAAc,CAAC,EAAC,cAAc,EAAE,eAAe,EAAQ;IAEzD,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,kBAAgB,iBAAkB;IAE9D,qBACI,8OAAC;;0BACG,8OAAC;gBAAe,KAAK;gBAAgB,OAAO;;;;;;0BAC5C,8OAAC;;oBAAS;oBAAQ;;;;;;;;;;;;;AAG9B;uCAEe","debugId":null}},
    {"offset": {"line": 545, "column": 0}, "map": {"version":3,"sources":["file:///Users/sbb/Desktop/Tinnus/hearing-frontend/src/components/UI/Reception.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {lightGrayColor, primaryColor} from \"@/styles/colors\";\r\n\r\ninterface IProps {\r\n    isReception: boolean;\r\n    setIsReception: (isReception: boolean) => void;\r\n    type?: string\r\n}\r\nconst CheckBoxLabel = styled.label`\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n    font-family: var(--font-manrope);\r\n    color: #333;\r\n`;\r\n\r\nconst StyledCheckbox = styled.input`\r\n    display: none; \r\n\r\n    &:checked + span {\r\n        background-color: ${primaryColor}; \r\n        border-color: ${primaryColor};\r\n    }\r\n\r\n    &:checked + span svg {\r\n        opacity: 1;  \r\n    }\r\n`;\r\n\r\nconst CheckboxWrapper = styled.span`\r\n    width: 28px;\r\n    height: 28px;\r\n    border: 2px solid ${lightGrayColor};\r\n    border-radius: 4px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: all 0.3s ease;  \r\n\r\n    svg {\r\n        opacity: 0;  \r\n        transition: opacity 0.3s ease; \r\n    }\r\n`;\r\n\r\nconst Reception = ({ isReception, setIsReception, type }: IProps) => {\r\n\r\n    const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setIsReception(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <CheckBoxLabel>\r\n            <StyledCheckbox\r\n                type={type ? type : 'checkbox'}\r\n                checked={isReception}\r\n                onChange={handleCheckboxChange}\r\n            />\r\n            <CheckboxWrapper>\r\n                <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M5.83325 13.9032L11.3446 19.25L22.1666 8.75\" stroke=\"white\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                </svg>\r\n            </CheckboxWrapper>\r\n        </CheckBoxLabel>\r\n    );\r\n};\r\n\r\nexport default Reception;\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAOA,MAAM,gBAAgB,2KAAA,CAAA,UAAM,CAAC,KAAK;;;EAAA,CAAC;;;;;;;AAOnC,CAAC;AAED,MAAM,iBAAiB,2KAAA,CAAA,UAAM,CAAC,KAAK;;;EAAA,CAAC;;;;0BAIV,EAAE,uHAAA,CAAA,eAAY,CAAC;sBACnB,EAAE,uHAAA,CAAA,eAAY,CAAC;;;;;;AAMrC,CAAC;AAED,MAAM,kBAAkB,2KAAA,CAAA,UAAM,CAAC,IAAI;;;EAAA,CAAC;;;sBAGd,EAAE,uHAAA,CAAA,iBAAc,CAAC;;;;;;;;;;;AAWvC,CAAC;AAED,MAAM,YAAY,CAAC,EAAE,WAAW,EAAE,cAAc,EAAE,IAAI,EAAU;IAE5D,MAAM,uBAAuB,CAAC;QAC1B,eAAe,MAAM,MAAM,CAAC,OAAO;IACvC;IAEA,qBACI,8OAAC;;0BACG,8OAAC;gBACG,MAAM,OAAO,OAAO;gBACpB,SAAS;gBACT,UAAU;;;;;;0BAEd,8OAAC;0BACG,cAAA,8OAAC;oBAAI,OAAM;oBAAK,QAAO;oBAAK,SAAQ;oBAAY,MAAK;oBAAO,OAAM;8BAC9D,cAAA,8OAAC;wBAAK,GAAE;wBAA8C,QAAO;wBAAQ,gBAAa;wBAAI,kBAAe;wBAAQ,mBAAgB;;;;;;;;;;;;;;;;;;;;;;AAKjJ;uCAEe","debugId":null}},
    {"offset": {"line": 741, "column": 0}, "map": {"version":3,"sources":["file:///Users/sbb/Desktop/Tinnus/hearing-frontend/src/api/request.ts"],"sourcesContent":[" import axios, {AxiosError, AxiosRequestConfig, AxiosRequestHeaders, AxiosResponse} from \"axios\";\r\n \r\n axios.defaults.withCredentials = true;\r\n axios.defaults.xsrfCookieName = \"csrftoken\";\r\n axios.defaults.xsrfHeaderName = 'X-CSRFToken';\r\n\r\nfunction getApiBaseUrl(): string {\r\n    const explicit = typeof window !== 'undefined' ? (window as any).NEXT_PUBLIC_API_BASE_URL || process.env.NEXT_PUBLIC_API_BASE_URL : process.env.NEXT_PUBLIC_API_BASE_URL;\r\n    if (explicit) return explicit as string;\r\n    const host = typeof window !== 'undefined' ? window.location.hostname : '127.0.0.1';\r\n    return `http://${host}:8000/api`;\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: getApiBaseUrl(),\r\n    withCredentials: true,\r\n});\r\n\r\nlet inMemoryCsrfToken: string | null = null;\r\n\r\nfunction getCookie(name: string): string | null {\r\n    const matches = typeof document !== 'undefined' ? document.cookie.match(new RegExp('(?:^|; )' + name.replace(/([.$?*|{}()\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')) : null;\r\n    return matches ? decodeURIComponent(matches[1]) : null;\r\n}\r\n\r\n\r\n axiosInstance.interceptors.request.use((config) => {\r\n     const method = (config.method || 'get').toLowerCase();\r\n     const needsCsrf = ['post', 'put', 'patch', 'delete'].includes(method);\r\n\r\n     if (needsCsrf) {\r\n         const token = inMemoryCsrfToken || getCookie('csrftoken');\r\n         if (token) {\r\n             if (!config.headers) config.headers = {} as AxiosRequestHeaders;\r\n             (config.headers as AxiosRequestHeaders)['X-CSRFToken'] = token;\r\n         }\r\n     }\r\n\r\n     return config;\r\n });\r\n\r\n\r\naxiosInstance.interceptors.response.use(\r\n    (response) => response,\r\n    async (error: AxiosError) => {\r\n        const originalConfig = error.config as (import('axios').AxiosRequestConfig & { _retry?: boolean });\r\n        if (error.response && error.response.status === 403 && !originalConfig?._retry) {\r\n            try {\r\n                originalConfig._retry = true;\r\n                const res = await axiosInstance.get('/csrf/');\r\n                inMemoryCsrfToken = getCookie('csrftoken') || (res as any)?.data?.csrftoken || null;\r\n                return await axiosInstance.request(originalConfig);\r\n            } catch (csrfError) {\r\n                return Promise.reject(csrfError);\r\n            }\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport class NetworkService {\r\n    // Токены\r\n    static async csrf(): Promise<AxiosResponse> {\r\n        try {\r\n            const res = await axiosInstance.get('/csrf/');\r\n            inMemoryCsrfToken = getCookie('csrftoken') || (res as any)?.data?.csrftoken || null;\r\n            return res;\r\n        } catch (error: any) {\r\n            return error.response;\r\n        }\r\n    }\r\n \r\n    // Авторизация\r\n    static async register(data: object): Promise<AxiosResponse> {\r\n        try {\r\n            return await axiosInstance.post('/register/', data);\r\n        } catch (error: any) {\r\n            return error.response;\r\n        }\r\n    }\r\n    static async login(data: object): Promise<AxiosResponse> {\r\n        try {\r\n            return await axiosInstance.post('/login/', data);\r\n        } catch (error: any) {\r\n            return error.response;\r\n        }\r\n    }\r\n    static async isAuth (): Promise<AxiosResponse> {\r\n        try {\r\n            return await axiosInstance.get('/auth/status/');\r\n        } catch (error: any) {\r\n            return error.response;\r\n        }\r\n    }\r\n \r\n    static async streak(): Promise<AxiosResponse> {\r\n        try {\r\n            return await axiosInstance.get('/streak/');\r\n        } catch (error: any) {\r\n            return error.response;\r\n        }\r\n    }\r\n \r\n    // Тесты\r\n    static async questions(): Promise<AxiosResponse> {\r\n        try {\r\n            return await axiosInstance.get('/questions/');\r\n        } catch (error: any) {\r\n            return error.response;\r\n        }\r\n    }\r\n    static async answers(data: object): Promise<AxiosResponse> {\r\n        try {\r\n            return await axiosInstance.post('/tests/submit/', data);\r\n        } catch (error: any) {\r\n            return error.response;\r\n        }\r\n    }\r\n\r\n    // Видео\r\n    static async calming(data: object): Promise<AxiosResponse> {\r\n        try {\r\n            return await axiosInstance.post('/calming/', data);\r\n        } catch (error: any) {\r\n            return error.response;\r\n        }\r\n    }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 863, "column": 0}, "map": {"version":3,"sources":["file:///Users/sbb/Desktop/Tinnus/hearing-frontend/src/store/streakStore.ts"],"sourcesContent":["import {create} from \"zustand/react\";\nimport {NetworkService} from \"@/api/request\";\n\ninterface StreakState {\n    isTestDay: boolean;\n    lastVisitDate: string;\n    nextTestDay: number;\n    streak: number;\n    studyGroup: number;\n    loadStreak: () => Promise<void>;\n}\n\nconst useStreakStore = create<StreakState>()((set) => ({\n    isTestDay: false,\n    lastVisitDate: \"\",\n    nextTestDay: 0,\n    streak: 0,\n    studyGroup: 0,\n    loadStreak: async () => {\n        const res = await NetworkService.streak();\n        if (res && res.status === 200) {\n            set({\n                isTestDay: res.data.is_test_day,\n                lastVisitDate: res.data.last_visit_date,\n                nextTestDay: res.data.next_test_day,\n                streak: res.data.streak,\n                studyGroup: res.data.study_group,\n            });\n        }\n    },\n}))\n\n\nexport const isTestDay = () => useStreakStore((state)=> state.isTestDay);\nexport const lastVisitDate = () => useStreakStore((state)=> state.lastVisitDate);\nexport const nextTestDay = () => useStreakStore((state)=> state.nextTestDay);\nexport const streak = () => useStreakStore((state)=> state.streak);\nexport const studyGroup = () => useStreakStore((state)=> state.studyGroup);\nexport const loadStreak = () => useStreakStore.getState().loadStreak();\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;AAWA,MAAM,iBAAiB,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD,IAAiB,CAAC,MAAQ,CAAC;QACnD,WAAW;QACX,eAAe;QACf,aAAa;QACb,QAAQ;QACR,YAAY;QACZ,YAAY;YACR,MAAM,MAAM,MAAM,qHAAA,CAAA,iBAAc,CAAC,MAAM;YACvC,IAAI,OAAO,IAAI,MAAM,KAAK,KAAK;gBAC3B,IAAI;oBACA,WAAW,IAAI,IAAI,CAAC,WAAW;oBAC/B,eAAe,IAAI,IAAI,CAAC,eAAe;oBACvC,aAAa,IAAI,IAAI,CAAC,aAAa;oBACnC,QAAQ,IAAI,IAAI,CAAC,MAAM;oBACvB,YAAY,IAAI,IAAI,CAAC,WAAW;gBACpC;YACJ;QACJ;IACJ,CAAC;AAGM,MAAM,YAAY,IAAM,eAAe,CAAC,QAAS,MAAM,SAAS;AAChE,MAAM,gBAAgB,IAAM,eAAe,CAAC,QAAS,MAAM,aAAa;AACxE,MAAM,cAAc,IAAM,eAAe,CAAC,QAAS,MAAM,WAAW;AACpE,MAAM,SAAS,IAAM,eAAe,CAAC,QAAS,MAAM,MAAM;AAC1D,MAAM,aAAa,IAAM,eAAe,CAAC,QAAS,MAAM,UAAU;AAClE,MAAM,aAAa,IAAM,eAAe,QAAQ,GAAG,UAAU","debugId":null}},
    {"offset": {"line": 904, "column": 0}, "map": {"version":3,"sources":["file:///Users/sbb/Desktop/Tinnus/hearing-frontend/src/app/tests/page.tsx"],"sourcesContent":["'use client'\nimport React, {useState, useEffect, FormEvent} from 'react';\nimport WaveSvg from \"@/components/UI/WaveSvg\";\nimport WindowBlock from \"@/components/UI/WindowBlock\";\nimport {BackgroundPage} from \"@/app/(auth)/page.styled\";\nimport {\n    ButtonsWrapper,\n    ButtonTest,\n    FormTest,\n    QuestionBlock,\n    TestSection,\n    TextAreaStyled,\n    TitleTest\n} from \"@/app/tests/page.styled\";\nimport ProgressBar from \"@/components/UI/ProgressBar\";\nimport Reception from \"@/components/UI/Reception\";\nimport {NetworkService} from \"@/api/request\";\nimport {isTestDay, loadStreak, streak} from \"@/store/streakStore\";\nimport {useRouter} from \"next/navigation\";\n\ntype Option = {\n    id: number,\n    label: string\n}\ntype Question = {\n    id: number;\n    question: string;\n    type: 'single' | 'multiple' | 'input';\n    options?: Option[],\n    input?: string\n}\ntype AnswerValue = {\n    selected?: number[];\n    input?: string;\n};\ntype InterstitialText ={\n    title: string;\n    text: string;\n};\n\ntype AnswersState = Record<number, AnswerValue>;\n\ntype OutAnswer = {\n    question: number;\n    selected?: number | number[];\n    input?: string;\n};\n\n\nconst QuestionsForm = () => {\n    const [questions, setQuestions] = useState<Question[]>([]);\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [answers, setAnswers] = useState<AnswersState>({});\n    const [interstitialTexts, setInterstitialTexts] = useState<InterstitialText | null>(null);\n    const [isStreakLoaded, setIsStreakLoaded] = useState(false);\n    const router = useRouter();\n    const streakDay = streak();\n    const testDay = isTestDay();\n\n    // Текстовые вставки\n    const interstitials: Record<number, InterstitialText> = {\n        14: {title: \"Госпитальная шкала тревоги и депрессии (HADS). Ответьте, пожалуйста, на следующие вопросы:\", text: \"Часть 1. Тревога. Каждому утверждению соответствуют 4 варианта ответа. Выберите тот из ответов, который соответствует Вашему состоянию:\"},\n        21: {title: \"Госпитальная шкала тревоги и депрессии (HADS). Ответьте, пожалуйста, на следующие вопросы:\", text: \"Часть 2. Депрессия. Каждому утверждению соответствуют 4 варианта ответа. Выберите тот из ответов, который соответствует Вашему состоянию:\"},\n        28: {title: \"Ниже вы найдете 13 утверждений, описывающих различные мысли и чувства, которые могут быть связаны с шумом в ушах у вас.\", text: \"Шкала катастрофизации тиннитуса (TCS). Шкала катастрофизации тиннитуса направлена на определение мыслей и чувств, которые вы испытываете при ощущении шума в ушах. С помощью данного опросника мы хотим выяснить, какое влияние оказывает шум в ушах на ваше состояние: на настроение, поведение, отношение.\"},\n    }\n\n    // 1) Загружаем streak в стор и отмечаем готовность\n    useEffect(() => {\n        let mounted = true;\n        (async () => {\n            try {\n                await loadStreak();\n                if (mounted) setIsStreakLoaded(true);\n            } catch (err) {\n                console.log(err);\n                if (mounted) setIsStreakLoaded(true);\n            }\n        })();\n        return () => { mounted = false };\n    }, []);\n\n    // 2) После загрузки streak реагируем на актуальное значение testDay\n    useEffect(() => {\n        if (!isStreakLoaded) return;\n        if (!testDay) {\n            router.push(\"/instruction\");\n            return;\n        }\n        (async () => {\n            try {\n                const res = await NetworkService.questions();\n                setQuestions(res.data.questions);\n            } catch (err) {\n                console.log(err);\n                setQuestions([]);\n            }\n        })();\n    }, [isStreakLoaded, testDay, router]);\n    const handleSubmit = async () => {\n        const outAnswers: OutAnswer[] = Object.entries(answers)\n            .map(([key, value]) => {\n                const questionId = Number(key);\n                const questionMeta = questions.find(q => q.id === questionId);\n\n                const out: OutAnswer = { question: questionId };\n\n                if (value.selected && value.selected.length > 0) {\n                    if (questionMeta?.type === 'single') {\n                        out.selected = value.selected[0];\n                    } else if (questionMeta?.type === 'multiple') {\n                        out.selected = value.selected;\n                    }\n                }\n\n                if (value.input && value.input.trim() !== '') {\n                    out.input = value.input.trim();\n                }\n\n                if (out.selected === undefined && !out.input) return null;\n                return out;\n            })\n            .filter((v): v is OutAnswer => v !== null);\n\n        const payload = { day: streakDay, answers: outAnswers };\n\n        console.log('Submitting answers payload:', payload);\n        const res = await NetworkService.answers(payload);\n        console.log(res);\n    };\n\n    // Изменение состояния ответов\n    const handleMultipleChange = (qId: number, optionId: number, checked: boolean) => {\n        setAnswers((prev) => {\n            const prevAns = prev[qId]?.selected || [];\n            const newAns = checked\n                ? [...prevAns, optionId]\n                : prevAns.filter((id) => id !== optionId);\n\n            return { ...prev, [qId]: { ...prev[qId], selected: newAns } };\n        });\n    };\n    const handleSingleChange = (questionId: number, optionId: number) => {\n        setAnswers((prev) => ({\n            ...prev,\n            [questionId]: { selected: [optionId] },\n        }));\n    };\n    const handleInputChange = (qId: number, value: string) => {\n        setAnswers((prev) => ({\n            ...prev,\n            [qId]: { ...prev[qId], input: value },\n        }));\n    };\n\n    //Переключение вопросов\n    const handlePrevQuestion = () => {\n        if (interstitialTexts){\n            setInterstitialTexts(null);\n            return;\n        }\n        if (currentQuestionIndex > 0) {\n            setCurrentQuestionIndex(currentQuestionIndex - 1);\n        }\n    };\n    const handleNextQuestion = (e: FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        const currentQ = questions[currentQuestionIndex];\n        if(currentQ && interstitials[currentQ.id]) {\n            setInterstitialTexts(interstitials[currentQ.id])\n            return;\n        }\n        if (currentQuestionIndex < questions.length - 1) {\n            setCurrentQuestionIndex((prev)=> prev + 1);\n        } else {\n            handleSubmit();\n        }\n    };\n\n    const handleNextFromInterstitial = () => {\n        setInterstitialTexts(null);\n        setCurrentQuestionIndex((prev) => prev + 1);\n    };\n\n    // Проверка ответа на вопрос\n    const isAnswered = (question: Question): boolean=>{\n        const ans = answers[question.id];\n        if(question.type === 'multiple' || question.type === 'single'){\n            return !!ans?.selected && ans.selected.length > 0\n        }\n        if (question.type === 'input') {\n            return !!ans?.input && ans.input.trim() !== '';\n        }\n        return false\n    }\n\n\n    const currentQuestion: Question = questions[currentQuestionIndex];\n\n    return (\n        <BackgroundPage>\n            <WaveSvg />\n            <WindowBlock>\n                {currentQuestion && (\n                    <TestSection>\n                        <TitleTest>\n                            <ProgressBar\n                                totalQuestions={questions.length}\n                                currentQuestion={currentQuestionIndex + 1}\n                            />\n                            <h2>{!interstitialTexts && currentQuestion.question}</h2>\n                            <h2>{interstitialTexts && interstitialTexts.title}</h2>\n                        </TitleTest>\n                        <FormTest id='questionForm' onSubmit={handleNextQuestion}>\n                            {interstitialTexts ? (\n                                <QuestionBlock>\n                                    <p style={{cursor: \"auto\"}}>{interstitialTexts.text}</p>\n                                </QuestionBlock>\n                            ) : (\n                                <>\n                                    {currentQuestion.type === 'multiple' &&\n                                        currentQuestion.options?.map((opt) => {\n                                            const selected = answers[currentQuestion.id]?.selected || [];\n                                            return (\n                                                <QuestionBlock key={opt.id}>\n                                                    <Reception\n                                                        isReception={selected.includes(opt.id)}\n                                                        setIsReception={(checked) =>\n                                                            handleMultipleChange(currentQuestion.id, opt.id, checked)\n                                                        }\n                                                    />\n                                                    <p>{opt.label}</p>\n                                                </QuestionBlock>\n                                            );\n                                        })}\n                                    {currentQuestion.type === 'single' &&\n                                        currentQuestion.options?.map((opt) => (\n                                            <QuestionBlock key={opt.id}>\n                                                <Reception\n                                                    type=\"radio\"\n                                                    isReception={answers[currentQuestion.id]?.selected?.[0] === opt.id}\n                                                    setIsReception={(checked) =>\n                                                        checked && handleSingleChange(currentQuestion.id, opt.id)\n                                                    }\n                                                />\n                                                <p>{opt.label}</p>\n                                            </QuestionBlock>\n                                        ))}\n                                    {currentQuestion.input && (\n                                        <TextAreaStyled\n                                            placeholder={currentQuestion.input}\n                                            value={(answers[currentQuestion.id] as { input: string } | undefined)?.input || ''}\n                                            onChange={(e) => handleInputChange(currentQuestion.id, e.target.value)}\n                                        >\n                                        </TextAreaStyled>\n                                    )}\n                                </>\n                            )}\n                        </FormTest>\n                        <ButtonsWrapper>\n                            <ButtonTest onClick={handlePrevQuestion} disabled={currentQuestionIndex===0 && !interstitialTexts}>Назад</ButtonTest>\n                            <ButtonTest\n                                $primary\n                                disabled={!interstitialTexts && !isAnswered(currentQuestion)}\n                                type={interstitialTexts ? 'button' : 'submit'}\n                                onClick={interstitialTexts ? handleNextFromInterstitial : undefined}\n                                form='questionForm'\n\n                            >\n                                {currentQuestionIndex === questions.length - 1 && !interstitialTexts ? 'Отправить' : 'Далее'}\n                            </ButtonTest>\n                        </ButtonsWrapper>\n                    </TestSection>\n                )}\n            </WindowBlock>\n        </BackgroundPage>\n    );\n};\n\nexport default QuestionsForm;"],"names":[],"mappings":"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","debugId":null}}]
}